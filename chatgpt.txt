
🔲 Preguntar a GPT
    App.jsx y main.jsx Importan Global.css
    Darle ambas hojas y estructura actualizada


Continuar:

🔲 Gestion de pedidos al entrar en Ver Detalles, que aparezca tambien Editar pedido.

🔲 Preguntar si puede ver todas las hojas de la app, y que sugiere de mejorar 



✅ FASE 1 – Terminá lo esencial (MVP funcional y profesional)
🔲 Pulir diseño del panel y páginas clave

 Mejorar estilos en el Login, AdminPanel, Tienda y Carrito.

 Agregar feedback visual (loading, errores, confirmaciones).

 Asegurar diseño responsivo en móvil y desktop.

🔲 Seguridad y flujo de usuarios

 Proteger rutas de admin (/admin, /admin/productos, etc.).

 Verificar persistencia del login (si se cierra el navegador, que siga logueado).

 Agregar validación en formularios (campos vacíos, inputs mal escritos).

🔲 Control de stock en checkout

 Validar si hay suficiente stock antes de permitir la compra.

 Actualizar stock automáticamente después de la compra.

🔲 Mejorar experiencia de compra

 Mostrar resumen claro del pedido antes de confirmar.

 Redirección después del checkout + mensaje de éxito.

🧩 FASE 2 – Funcionalidades clave para vender como sistema completo
🔲 Gestión completa de productos/tutoriales

 Subida de imágenes (con Firebase Storage).

 Filtros y buscador en productos/tutoriales.

 Paginación si hay muchos ítems.

🔲 Gestión de pedidos avanzada

 Filtrar pedidos por estado (pendiente, enviado, entregado).

 Agregar historial de pedidos para clientes (requiere login).

 Posibilidad de que el cliente marque el pedido como “recibido”.

🔲 Emails de confirmación (opcional)

 Enviar email al cliente al hacer pedido.

 Enviar email cuando cambia el estado.

🚀 FASE 3 – Preparar para vender a otros negocios (escalabilidad/SaaS)
🔲 Sistema multi-usuario (opcional)

 Que cada cuenta admin pueda tener su propia tienda/productos.

 Base de datos separada por usuario o con uid como filtro.

🔲 Panel personalizado

 Que cada negocio vea sólo sus pedidos/productos.

 Logo, colores o nombre editable por el admin.

🔲 Dominio y branding

 Configurar dominio personalizado (ej: caninosmercedes.com).

 Logo en favicon y títulos de pestañas.

🧼 FASE 4 – Optimización y performance
🔲 Optimizar carga de datos

 Paginación o lazy loading con Firestore.

 Evitar recargas innecesarias (usar useMemo, React.memo).

🔲 Optimizar componentes

 Lazy loading en páginas con React.lazy() + Suspense.

 Optimizar imágenes para no pesar demasiado.

🔲 Auditoría de performance

 Usar herramientas como Lighthouse (Chrome DevTools).

 Revisar errores en consola o advertencias de React.



