


# Plan de revisión para desarrollo de CaninosMercedes

=== FASE 1 – MVP funcional y profesional ===

1. Mejorar estilos en:
   - /login
   - /admin
   - /tienda
   - /carrito

2. Revisar diseño responsivo en móvil y desktop para:
   - /login
   - /admin
   - /tienda
   - /carrito

3. Agregar feedback visual (loading, errores, confirmaciones) en:
   - /login
   - /checkout
   - /admin
   - /tienda
   - /carrito

4. Validación en formularios (campos vacíos, inputs mal escritos) en:
   - /login
   - /admin (crear/editar producto)
   - /checkout

5. Proteger rutas de admin:
   - /admin
   - /admin/productos
   - demás rutas privadas de admin

=== FASE 2 – Funcionalidades clave ===

1. Subida de imágenes con Firebase Storage en:
   - /admin/create-product
   - /admin/edit-product

2. Filtros y buscador en productos/tutoriales en:
   - /tienda
   - /tutoriales
   - /admin/productos

3. Historial de pedidos para clientes (requiere login) en:
   - /seguimiento
   - /perfil (si existe)

4. Cliente puede marcar pedido como “recibido” en:
   - /seguimiento

5. Emails automáticos al cliente en:
   - Backend (servicios o funciones)
   - Checkout
   - Panel admin para cambios de estado

=== FASE 3 – Branding y escalabilidad ===

1. Sistema multi-usuario (admin con su propia tienda/productos):
   - /admin (panel con filtro por usuario)

2. Panel personalizado para cada negocio (logo, colores):
   - /admin
   - páginas principales del admin

3. Configuración de dominio y branding:
   - No aplica a páginas, es configuración general del proyecto

=== FASE 4 – Optimización y performance ===

1. Paginación o lazy loading con Firestore en:
   - /tienda
   - /tutoriales
   - /admin/productos

2. Optimización de componentes con React.lazy y React.memo:
   - Componentes usados globalmente en toda la app

3. Auditoría de performance con Lighthouse y revisión de consola:
   - Todo el sitio

---

# Notas:
- Para cada ítem, cuando avancemos, mostrar el código o la página específica para facilitar la revisión y corrección.
- El objetivo es avanzar ordenadamente, validando cada funcionalidad clave antes de seguir.
